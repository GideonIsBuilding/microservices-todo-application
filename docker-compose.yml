services:
  traefik:
    image: "traefik:v3.3"
    container_name: "traefik"
    restart: "unless-stopped"
    command:
      - "--configFile=/traefik.yml"
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik.yml:/traefik.yml:ro"
      - "./acme.json:/acme.json:rw"
    networks:
      - traefik-public

  redis-queue:
    image: redis:7.0-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  auth-api:
    build: 
      context: ./auth-api
    image: auth-api
    ports:
      - "${AUTH_API_PORT}:8081"
    environment:
      - AUTH_API_PORT=${AUTH_API_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - USERS_API_ADDRESS=${USERS_API_ADDRESS}
    depends_on:
      - users-api
      - redis-queue
    networks:
      - traefik-public
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-public"
      - "traefik.http.routers.auth-api.rule=Host(`auth-api.localhost`)"
      - "traefik.http.routers.auth.entrypoints=websecure"
      - "traefik.http.routers.auth.tls=true"
      - "traefik.http.routers.auth.tls.certresolver=letsencrypt"
      - "traefik.http.services.auth-api.loadbalancer.server.port=8081"

  todos-api:
    build: 
      context: ./todos-api
    image: todos-api
    ports:
      - "${TODO_API_PORT}:8082"
    environment:
      - TODO_API_PORT=${TODO_API_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_CHANNEL=${REDIS_CHANNEL}
    depends_on:
      - auth-api
      - redis-queue
    networks:
      - traefik-public
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-public"
      - "traefik.http.routers.todos-api.rule=Host(`todos-api.localhost`)"
      - "traefik.http.routers.todos.entrypoints=websecure"
      - "traefik.http.routers.todos.tls=true"
      - "traefik.http.routers.todos.tls.certresolver=letsencrypt"
      - "traefik.http.services.todos-api.loadbalancer.server.port=8082"

  users-api:
    build: 
      context: ./users-api
    image: users-api
    ports:
      - "${SERVER_PORT}:8083"
    environment:
      - SERVER_PORT=${SERVER_PORT}
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - traefik-public
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-public"
      - "traefik.http.routers.users-api.rule=Host(`users-api.localhost`)"
      - "traefik.http.routers.users.entrypoints=websecure"
      - "traefik.http.routers.users.tls=true"
      - "traefik.http.routers.users.tls.certresolver=letsencrypt"
      - "traefik.http.services.users-api.loadbalancer.server.port=8083"

  log-message-processor:
    build:
      context: ./log-message-processor
    image: log-message-processor
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_CHANNEL=${REDIS_CHANNEL}
    depends_on:
      - redis-queue

  frontend:
    build: 
      context: ./frontend
    image: frontend:latest
    ports:
      - "8080:8080"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - AUTH_API_ADDRESS=${AUTH_API_ADDRESS}
      - TODOS_API_ADDRESS=${TODOS_API_ADDRESS}
    depends_on:
      - auth-api
      - todos-api
    networks:
      - traefik-public
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-public"
      - "traefik.http.routers.frontend.rule=Host(`frontend.localhost`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.routers.frontend.tls.certresolver=letsencrypt"
      - "traefik.http.services.frontend.loadbalancer.server.port=8080"

networks:
  traefik-public:
    external: true

volumes:
  redis-data:
